#!/usr/bin/env python3
"""
Teste de formata√ß√£o de tabelas markdown
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from firebase.ai_service import _markdown_to_html

def test_table_formatting():
    """Testa formata√ß√£o de tabelas markdown"""
    
    print("=" * 80)
    print("TESTE DE FORMATA√á√ÉO DE TABELAS MARKDOWN")
    print("=" * 80)
    
    # Exemplo de tabela da agricultura
    table_text = """Fa√ßa uma tabela simples no seu caderno para cada produto da lista:

| Crit√©rio de An√°lise | Produto A (Ex: Tomate) | Produto B (Ex: Couve) | Produto C (Ex: Gergelim) |
| :--- | :--- | :--- | :--- |
| Precisa de muita √°gua? | Sim, muita. Precisa de rega. | Sim, precisa de rega regular. | N√£o, √© muito tolerante √† seca. |
| Precisa de solo rico/adubo? | Sim, √© muito exigente. | Sim, gosta de composto e estrume. | N√£o, produz bem em solos mais fracos. |
| √â sens√≠vel a pragas/doen√ßas?| Sim, muito! Alto risco. | M√©dio risco, atacado por pulg√µes. | Baixo risco, muito resistente. |
| Precisa de muito trabalho? | Sim, mondas, tutoragem, pulveriza√ß√£o. | Sim, rega di√°ria e colheita regular. | N√£o, s√≥ na sementeira e colheita. |
| Quanto tempo at√© √† colheita?| R√°pido (3-4 meses). | R√°pido (2-3 meses). | M√©dio (4-5 meses). |
| Posso guardar a colheita? | N√£o, estraga-se muito r√°pido. | N√£o, tem de ser vendida fresca. | Sim, pode ser guardado por meses. |

Esta tabela vai ajudar a comparar facilmente os tr√™s produtos."""
    
    print("\nüìù Input (Tabela Markdown):")
    print(table_text[:200] + "...\n")
    
    # Converter para HTML
    html = _markdown_to_html(table_text)
    
    print("‚úÖ Output (HTML Gerado):")
    print(html)
    print("\n" + "=" * 80)
    
    # Valida√ß√µes
    validations = []
    
    if '<table>' in html:
        validations.append("‚úÖ Tag <table> encontrada")
    else:
        validations.append("‚ùå Tag <table> n√£o encontrada")
    
    if '<thead>' in html:
        validations.append("‚úÖ Tag <thead> encontrada (cabe√ßalhos)")
    else:
        validations.append("‚ùå Tag <thead> n√£o encontrada")
    
    if '<tbody>' in html:
        validations.append("‚úÖ Tag <tbody> encontrada (dados)")
    else:
        validations.append("‚ùå Tag <tbody> n√£o encontrada")
    
    if '<th>' in html:
        validations.append("‚úÖ Tags <th> encontradas (c√©lulas de cabe√ßalho)")
    else:
        validations.append("‚ùå Tags <th> n√£o encontradas")
    
    if '<td>' in html:
        validations.append("‚úÖ Tags <td> encontradas (c√©lulas de dados)")
    else:
        validations.append("‚ùå Tags <td> n√£o encontradas")
    
    if html.count('<th>') >= 4:
        validations.append(f"‚úÖ M√∫ltiplas colunas detectadas ({html.count('<th>')} cabe√ßalhos)")
    else:
        validations.append("‚ö†Ô∏è  Poucas colunas detectadas")
    
    if html.count('<tr>') >= 7:
        validations.append(f"‚úÖ M√∫ltiplas linhas detectadas ({html.count('<tr>')} linhas)")
    else:
        validations.append("‚ö†Ô∏è  Poucas linhas detectadas")
    
    if 'table-wrapper' in html:
        validations.append("‚úÖ Wrapper para scroll horizontal presente")
    else:
        validations.append("‚ùå Wrapper para scroll horizontal ausente")
    
    print("VALIDA√á√ïES:")
    print("=" * 80)
    for v in validations:
        print(v)
    
    print("\n" + "=" * 80)
    print("RESULTADO FINAL:")
    print("=" * 80)
    
    success_count = sum(1 for v in validations if v.startswith("‚úÖ"))
    total = len(validations)
    
    if success_count == total:
        print(f"üéâ PERFEITO! {success_count}/{total} valida√ß√µes passaram!")
        print("‚úÖ Tabelas markdown est√£o sendo convertidas corretamente para HTML")
        print("‚úÖ Pronto para renderizar no frontend com estilos CSS")
        return 0
    elif success_count >= total * 0.7:
        print(f"‚úÖ BOM! {success_count}/{total} valida√ß√µes passaram")
        print("‚ö†Ô∏è  Algumas melhorias podem ser necess√°rias")
        return 0
    else:
        print(f"‚ùå FALHOU! Apenas {success_count}/{total} valida√ß√µes passaram")
        return 1

if __name__ == '__main__':
    exit(test_table_formatting())
