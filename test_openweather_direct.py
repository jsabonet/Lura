#!/usr/bin/env python3
"""
Script para testar diretamente o servi√ßo OpenWeather
"""
import os
import sys
import django

# Configurar Django
sys.path.append('./backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'agroalerta.settings')
django.setup()

from clima.services.openweather import openweather_service

def test_openweather_service():
    print("üå§Ô∏è Testando OpenWeather Service diretamente...")
    
    try:
        # Teste 1: Obter coordenadas
        print("\nüîç Teste 1: Obter coordenadas de Maputo")
        coords = openweather_service.get_coordinates("Maputo")
        print(f"Coordenadas: {coords}")
        
        if coords:
            # Teste 2: Clima atual
            print("\nüå°Ô∏è Teste 2: Obter clima atual")
            weather = openweather_service.get_current_weather(coords['lat'], coords['lon'])
            print(f"Clima atual: {weather}")
            
            # Teste 3: Previs√£o
            print("\nüìÖ Teste 3: Obter previs√£o")
            forecast = openweather_service.get_forecast(coords['lat'], coords['lon'], 5)
            print(f"Previs√£o (5 dias): {len(forecast)} per√≠odos")
            if forecast:
                print(f"Primeiro dia: {forecast[0]}")
            
            # Teste 4: Alertas
            print("\n‚ö†Ô∏è Teste 4: Obter alertas")
            alerts = openweather_service.get_weather_alerts(coords['lat'], coords['lon'])
            print(f"Alertas: {alerts}")
            
            print("\n‚úÖ Todos os testes conclu√≠dos!")
            return True
        else:
            print("‚ùå N√£o foi poss√≠vel obter coordenadas")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro durante os testes: {e}")
        return False

if __name__ == "__main__":
    success = test_openweather_service()
    if success:
        print("\nüéØ CONCLUS√ÉO: O backend est√° configurado para dados REAIS da OpenWeather API!")
    else:
        print("\n‚ö†Ô∏è CONCLUS√ÉO: O backend est√° usando dados MOCKADOS!")
