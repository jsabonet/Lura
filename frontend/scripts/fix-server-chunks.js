#!/usr/bin/env node
// Ensures .next/server/<chunk>.js files exist as simple re-exports of
// .next/server/chunks/<chunk>.js so webpack-runtime's require('./741.js')
// resolves correctly at runtime.

const fs = require('fs');
const path = require('path');

function log(...args) {
  try { console.log('[fix-server-chunks]', ...args); } catch {}
}

function ensureChunks() {
  const projectRoot = path.resolve(__dirname, '..');
  const serverDir = path.join(projectRoot, '.next', 'server');
  const chunksDir = path.join(serverDir, 'chunks');

  if (!fs.existsSync(serverDir)) {
    log('.next/server not found, skipping (build may not have run yet)');
    return;
  }

  if (!fs.existsSync(chunksDir)) {
    log('.next/server/chunks not found, nothing to do');
    return;
  }

  const files = fs.readdirSync(chunksDir);
  let created = 0;

  for (const f of files) {
    if (!/^[0-9]+\.js$/.test(f)) continue;
    const target = path.join(serverDir, f);
    const relative = `./chunks/${f}`;

    // If target exists and looks like it already requires chunks, skip
    if (fs.existsSync(target)) {
      try {
        const existing = fs.readFileSync(target, 'utf8');
        if (existing.includes(`require('${relative}')`) || existing.includes(`require("${relative}")`)) {
          continue;
        }
      } catch (e) {
        // ignore and overwrite
      }
    }

    const content = `// Auto-generated by scripts/fix-server-chunks.js
module.exports = require('${relative}');\n`;

    try {
      fs.writeFileSync(target, content, { encoding: 'utf8' });
      created++;
    } catch (err) {
      log('failed to write', target, err && err.message ? err.message : err);
    }
  }

  log('checked', files.length, 'chunk files, created', created, 're-exports');
}

ensureChunks();
